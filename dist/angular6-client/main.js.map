{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customerdetails/customerdetails.component.css","webpack:///./src/app/customerdetails/customerdetails.component.html","webpack:///./src/app/customerdetails/customerdetails.component.ts","webpack:///./src/app/customers/customers.component.css","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/display/display.component.css","webpack:///./src/app/display/display.component.html","webpack:///./src/app/display/display.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomersComponent } from './customers/customers.component';\nimport { CustomerdetailsComponent } from './customerdetails/customerdetails.component'\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/customers', pathMatch: 'full' },\n  { path: 'customers', component:  CustomersComponent},\n  { path: 'customerdetails/:id', component: CustomerdetailsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule\n{\n\n}\n","module.exports = \"h1 {\\n  color: #369;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 250%;\\n}\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n<router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Simple Angular 6 App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { CustomerdetailsComponent } from './customerdetails/customerdetails.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { DisplayComponent } from './display/display.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomersComponent,\n    CustomerdetailsComponent,\n    DisplayComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\" *ngIf=\\\"customerDetails\\\">\\n  <div class=\\\"card-header\\\">\\n    Customer Details\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{customerDetails.name}}</h5>\\n    <p class=\\\"card-text\\\">Name : {{customerDetails.name}}</p>\\n    <p class=\\\"card-text\\\">Email : {{customerDetails.email}}</p>\\n    <p class=\\\"card-text\\\">Phone : {{customerDetails.phone}}</p>\\n    <p class=\\\"card-text\\\">City : {{customerDetails.city}}</p>\\n    <p class=\\\"card-text\\\">State : {{customerDetails.state}}</p>\\n    <p class=\\\"card-text\\\">Country : {{customerDetails.country}}</p>\\n    <p class=\\\"card-text\\\">Organization : {{customerDetails.organization}}</p>\\n    <p class=\\\"card-text\\\">Job Profile : {{customerDetails.jobProfile}}</p>\\n    <p class=\\\"card-text\\\">Additional Info : {{customerDetails.additionalInfo}}</p>\\n    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go Back</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerDetails } from '../customerdetails'\nimport { DataService } from '../data.service'\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-customerdetails',\n  templateUrl: './customerdetails.component.html',\n  styleUrls: ['./customerdetails.component.css']\n})\nexport class CustomerdetailsComponent implements OnInit {\n  customerDetails: CustomerDetails = null;\n\n  constructor(private dataService: DataService, private activeRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.getCustomerDetails();\n  }\n\n  getCustomerDetails(): void {\n    this.activeRoute.params.subscribe(routeParams => {\n\n      this.dataService.getCustomerDetails(routeParams.id).subscribe(\n\n        (customerDetails: CustomerDetails) => {\n          this.customerDetails = customerDetails;\n          console.log(customerDetails);\n        });\n\n    });\n\n  }\n\n}\n","module.exports = \".centeralign {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n\\n}\\n\"","module.exports = \"<h2>Customer List Page</h2>\\n\\n<div class=\\\"col-md-6 centeralign\\\">\\n  <p>This Page Displays a list of customers</p>\\n  <p>Clicking on a Card Displays the name below</p>\\n  <p>\\\"Click for more details\\\" Redirects to a new page which displays the customer information</p>\\n  <div class=\\\"card centeralign addmargin\\\" style=\\\"width: 18rem;\\\" *ngFor=\\\"let customer of customers\\\">\\n    <div class=\\\"card-body\\\" (click) = setSelectedCustomer(customer.name)>\\n      <h5 class=\\\"card-title\\\">{{customer.name}}</h5>\\n      <p class=\\\"card-text\\\">{{customer.email}}</p>\\n      <p class=\\\"card-text\\\">{{customer.phone}}</p>\\n\\n      <a href=\\\"customerdetails/{{customer.id}}\\\" class=\\\"btn btn-primary\\\">Click for more details</a>\\n    </div>\\n  </div>\\n\\n  <app-display [customer] = selectedCustomer> </app-display>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service'\nimport { Customer } from '../customer';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  customers: Customer[] = [];\n  selectedCustomer : string = \"temp\";\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getCustomerList();\n  }\n\n  getCustomerList(): void {\n    this.dataService.getCustomerList().subscribe(\n      (customers: Customer[]) => {\n        this.customers = customers;\n        this.selectedCustomer = customers[0].name;\n        console.log(customers)\n      });\n  }\n\n  setSelectedCustomer( cust : string ): void {\n    this.selectedCustomer = cust ;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Customer } from './customer'\nimport { CustomerDetails } from './customerdetails'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  public getCustomerList(): Observable<Customer[]> {\n    return (this.http.get<Customer[]>(\"assets/samplejson/customerlist.json\"));\n  }\n\n  public getCustomerDetails(id: number): Observable<CustomerDetails> {\n    return (this.http.get<CustomerDetails>(\"assets/samplejson/customer\" + id + \".json\"));\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-3 centeralign\\\">\\n  <div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\n    {{customer}} Clicked\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.css']\n})\n\n\nexport class DisplayComponent implements OnInit {\n  @Input() customer : string ;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}